<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:coustom="clr-namespace:WpfCustomControlLibrary1.Controls"
    xmlns:cvs="clr-namespace:Susu.Wpf.CoustomControl.Converters"
    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
    xmlns:local="clr-namespace:WpfCustomControlLibrary1.Controls">

    <Style x:Key="ItemStyle" TargetType="{x:Type Grid}">
        <Setter Property="Height" Value="45" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Cursor" Value="Hand" />
    </Style>

    <Style TargetType="{x:Type local:NavigationTreeItem}">
        <Setter Property="ItemsSource" Value="{Binding Childrens}" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:NavigationTreeItem}">
                    <StackPanel>
                        <Grid x:Name="Item" Style="{StaticResource ResourceKey=ItemStyle}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="auto" />
                            </Grid.ColumnDefinitions>
                            <Border x:Name="ItemBorder" Grid.ColumnSpan="2" />
                            <Border x:Name="ItemBorderThickness" Grid.ColumnSpan="2" />
                            <StackPanel Margin="{Binding Depth, Converter={cvs:NavigationTreeDepthConverter}}" Orientation="Horizontal">
                                <iconPacks:PackIconMaterial VerticalAlignment="Center" Kind="{Binding Icon}" />
                                <TextBlock
                                    Margin="15,0,0,0"
                                    VerticalAlignment="Center"
                                    Text="{Binding Name}" />
                            </StackPanel>
                            <!--<iconPacks:PackIconMaterial
                                x:Name="Chevron"
                                Grid.Column="1"
                                Width="10"
                                Height="10"
                                Margin="20,0"
                                VerticalAlignment="Center"
                                Kind="ChevronDown" />-->
                            <coustom:ChevronSwitch
                                x:Name="Chevron"
                                Grid.Column="1"
                                Margin="20,0"
                                IsChecked="{Binding RelativeSource={RelativeSource Templatedparent}, Path=IsExpanded}" />
                        </Grid>
                        <ItemsPresenter x:Name="Items">
                            <ItemsPresenter.LayoutTransform>
                                <ScaleTransform ScaleY="0" />
                            </ItemsPresenter.LayoutTransform>
                        </ItemsPresenter>
                    </StackPanel>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="false">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Items"
                                            Storyboard.TargetProperty="(ItemsPresenter.LayoutTransform).ScaleY"
                                            To="0"
                                            Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Items"
                                            Storyboard.TargetProperty="(ItemsPresenter.LayoutTransform).ScaleY"
                                            To="1"
                                            Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>

                        <!--<Trigger Property="IsExpanded" Value="True">
                            <Setter TargetName="Chevron" Property="Kind" Value="ChevronUp" />
                        </Trigger>-->
                        <DataTrigger Binding="{Binding ElementName=Item, Path=IsMouseOver}" Value="True">
                            <Setter TargetName="ItemBorder" Property="Background" Value="{DynamicResource PrimaryBrush}" />
                            <Setter TargetName="ItemBorder" Property="Opacity" Value=".1" />
                        </DataTrigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="ItemBorderThickness" Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
                            <Setter TargetName="ItemBorderThickness" Property="BorderThickness" Value="0,0,4,0" />
                            <Setter TargetName="ItemBorder" Property="Background" Value="{DynamicResource PrimaryBrush}" />
                            <Setter TargetName="ItemBorder" Property="Opacity" Value=".3" />
                            <Setter TargetName="Item" Property="TextBlock.Foreground" Value="{DynamicResource PrimaryBrush}" />
                        </Trigger>
                        <DataTrigger Binding="{Binding IsChildren}" Value="False">
                            <Setter TargetName="Chevron" Property="Visibility" Value="Hidden" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>